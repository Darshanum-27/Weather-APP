{"ast":null,"code":"var _jsxFileName = \"/Users/darshanum/Desktop/Weather-APP/src/Components/MaxDailyTemp.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { LineChart } from '@mui/x-charts/LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaxDailyTemp = () => {\n  _s();\n  let [maxcurTemp, maxSetCurTemp] = useState(null);\n  let [maxcurTime, maxSetCurTime] = useState(null);\n  useEffect(() => {\n    axios.get('https://api.open-meteo.com/v1/forecast?latitude=32.735&longitude=-97.108&daily=temperature_2m_max&timezone=America%2FChicago').then(response => {\n      maxSetCurTemp(response.data.daily.temperature_2m_max);\n      maxSetCurTime(response.data.daily.time);\n      console.log(response.data.daily.temperature_2m_max);\n      console.log(response.data.daily.time);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BarChart, {\n      xAxis: [{\n        scaleType: 'band',\n        data: maxcurTime ? maxcurTime : []\n      }],\n      series: [{\n        data: maxcurTemp ? maxcurTemp : []\n      }],\n      width: 700,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      xAxis: [{\n        data: maxcurTime ? maxcurTime : []\n      }],\n      series: [{\n        data: maxcurTemp ? maxcurTemp : []\n      }],\n      width: 500,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(MaxDailyTemp, \"Rfvxm3OhSeJEFGVF/kEb6pNNxqo=\");\n_c = MaxDailyTemp;\nexport default MaxDailyTemp;\nvar _c;\n$RefreshReg$(_c, \"MaxDailyTemp\");","map":{"version":3,"names":["React","useState","useEffect","axios","BarChart","LineChart","jsxDEV","_jsxDEV","MaxDailyTemp","_s","maxcurTemp","maxSetCurTemp","maxcurTime","maxSetCurTime","get","then","response","data","daily","temperature_2m_max","time","console","log","children","xAxis","scaleType","series","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/darshanum/Desktop/Weather-APP/src/Components/MaxDailyTemp.jsx"],"sourcesContent":["import React from 'react'\nimport {useState,useEffect} from 'react'\nimport axios from 'axios';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { LineChart } from '@mui/x-charts/LineChart';\n\nconst MaxDailyTemp = () => {\n    let [maxcurTemp, maxSetCurTemp] = useState(null);\n    let [maxcurTime, maxSetCurTime] = useState(null);\n    useEffect(()=>{\n        axios.get('https://api.open-meteo.com/v1/forecast?latitude=32.735&longitude=-97.108&daily=temperature_2m_max&timezone=America%2FChicago').then((response)=>{\n            maxSetCurTemp(response.data.daily.temperature_2m_max)\n            maxSetCurTime(response.data.daily.time)\n            console.log(response.data.daily.temperature_2m_max)\n            console.log(response.data.daily.time)\n        })\n    },[])\n    return(\n        <div>\n            <BarChart\n                xAxis={[{ scaleType: 'band', data: maxcurTime? maxcurTime: [] }]}\n                series={[{ data: maxcurTemp? maxcurTemp: [] }]}\n                width={700}\n                height={300} \n            />\n            <LineChart\n                xAxis={[{ data: maxcurTime? maxcurTime: [] }]}\n                series={[\n                    {\n                        data: maxcurTemp? maxcurTemp: [],\n                    },\n                ]}\n                width={500}\n                height={300}\n            />\n        </div>\n    )\n}\nexport default MaxDailyTemp"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,SAAS,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,IAAI,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChDC,SAAS,CAAC,MAAI;IACVC,KAAK,CAACW,GAAG,CAAC,8HAA8H,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAG;MACvJL,aAAa,CAACK,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,kBAAkB,CAAC;MACrDN,aAAa,CAACG,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,IAAI,CAAC;MACvCC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,kBAAkB,CAAC;MACnDE,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,IAAI,CAAC;IACzC,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EACL,oBACIb,OAAA;IAAAgB,QAAA,gBACIhB,OAAA,CAACH,QAAQ;MACLoB,KAAK,EAAE,CAAC;QAAEC,SAAS,EAAE,MAAM;QAAER,IAAI,EAAEL,UAAU,GAAEA,UAAU,GAAE;MAAG,CAAC,CAAE;MACjEc,MAAM,EAAE,CAAC;QAAET,IAAI,EAAEP,UAAU,GAAEA,UAAU,GAAE;MAAG,CAAC,CAAE;MAC/CiB,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACFzB,OAAA,CAACF,SAAS;MACNmB,KAAK,EAAE,CAAC;QAAEP,IAAI,EAAEL,UAAU,GAAEA,UAAU,GAAE;MAAG,CAAC,CAAE;MAC9Cc,MAAM,EAAE,CACJ;QACIT,IAAI,EAAEP,UAAU,GAAEA,UAAU,GAAE;MAClC,CAAC,CACH;MACFiB,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAvB,EAAA,CA/BKD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAgClB,eAAeA,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
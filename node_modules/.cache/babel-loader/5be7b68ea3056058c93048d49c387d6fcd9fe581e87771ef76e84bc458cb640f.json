{"ast":null,"code":"var _jsxFileName = \"/Users/darshanum/Desktop/Weather-APP/src/Components/SunRiseandSunSet.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SunRiseandSunSet = () => {\n  _s();\n  let [sunRise, setSunRise] = useState(null);\n  let [sunSet, setSunSet] = useState(null);\n  useEffect(() => {\n    axios.get('https://api.open-meteo.com/v1/forecast?latitude=32.814&longitude=-96.9489&daily=sunrise,sunset&timezone=America%2FChicago').then(response => {\n      setSunRise(response.data.daily.sunrise[0]);\n      console.log(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"SunRise: \", sunRise ? sunRise : \"00:00\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SunSet: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(SunRiseandSunSet, \"wm8tINstsLdoXzKUN0hOjxL7PAk=\");\n_c = SunRiseandSunSet;\nexport default SunRiseandSunSet;\nvar _c;\n$RefreshReg$(_c, \"SunRiseandSunSet\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SunRiseandSunSet","_s","sunRise","setSunRise","sunSet","setSunSet","get","then","response","data","daily","sunrise","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/darshanum/Desktop/Weather-APP/src/Components/SunRiseandSunSet.jsx"],"sourcesContent":["import React from 'react'\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst SunRiseandSunSet = () => {\n    let [sunRise, setSunRise] = useState(null)\n    let [sunSet, setSunSet] = useState(null)\n    useEffect(()=>{\n    axios.get('https://api.open-meteo.com/v1/forecast?latitude=32.814&longitude=-96.9489&daily=sunrise,sunset&timezone=America%2FChicago').then((response) => {\n        setSunRise(response.data.daily.sunrise[0])\n        console.log(response.data)\n        }\n    )}, []\n)\n    return(\n        <div>\n            <h1>SunRise: {sunRise? sunRise:\"00:00\"} </h1>\n            <h1>SunSet: </h1>\n        </div>\n    )\n}\nexport default SunRiseandSunSet;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,IAAI,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxCC,SAAS,CAAC,MAAI;IACdC,KAAK,CAACS,GAAG,CAAC,2HAA2H,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACtJL,UAAU,CAACK,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACC,IAAI,CAAC;IAC1B,CACJ,CAAC;EAAA,CAAC,EAAE,EACR,CAAC;EACG,oBACIV,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,GAAI,WAAS,EAACZ,OAAO,GAAEA,OAAO,GAAC,OAAO,EAAC,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CnB,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd,CAAC;AAAAjB,EAAA,CAhBKD,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAiBtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
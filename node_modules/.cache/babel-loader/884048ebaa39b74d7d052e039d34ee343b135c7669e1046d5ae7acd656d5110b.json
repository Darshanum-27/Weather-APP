{"ast":null,"code":"var _jsxFileName = \"/Users/darshanum/Desktop/Weather-APP/src/Components/CurrentUV.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Stack from '@mui/material/Stack';\nimport { Gauge } from '@mui/x-charts/Gauge';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentUV = () => {\n  _s();\n  let [currUV, setCurrentUV] = useState(null);\n  useEffect(() => {\n    axios.get('https://api.open-meteo.com/v1/forecast?latitude=32.735&longitude=-97.108&hourly=uv_index&timezone=America%2FChicago&forecast_hours=1').then(response => {\n      setCurrentUV(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: {\n        xs: 'column',\n        md: 'row'\n      },\n      spacing: {\n        xs: 1,\n        md: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Gauge, {\n        width: 100,\n        height: 100,\n        value: currUV ? currUV.hourly.uv_index : 0,\n        valueMin: 0,\n        valueMax: 11\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentUV, \"hiwBURbax4WJqM6eOBrk+LY1JVY=\");\n_c = CurrentUV;\nexport default CurrentUV;\nvar _c;\n$RefreshReg$(_c, \"CurrentUV\");","map":{"version":3,"names":["React","Stack","Gauge","useState","useEffect","axios","jsxDEV","_jsxDEV","CurrentUV","_s","currUV","setCurrentUV","get","then","response","data","console","log","children","direction","xs","md","spacing","width","height","value","hourly","uv_index","valueMin","valueMax","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/darshanum/Desktop/Weather-APP/src/Components/CurrentUV.jsx"],"sourcesContent":["import React from 'react'\nimport Stack from '@mui/material/Stack';\nimport { Gauge } from '@mui/x-charts/Gauge';\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst CurrentUV = () =>{\n    let [currUV, setCurrentUV] = useState(null);\n    useEffect(()=>{\n            axios.get('https://api.open-meteo.com/v1/forecast?latitude=32.735&longitude=-97.108&hourly=uv_index&timezone=America%2FChicago&forecast_hours=1').then((response) => {\n            setCurrentUV(response.data)\n            console.log(response.data)\n            }\n        )\n    },[])\nreturn(\n    <div>\n        <Stack direction={{ xs: 'column', md: 'row' }} spacing={{ xs: 1, md: 3 }}>\n            <Gauge width={100} height={100} value={currUV? currUV.hourly.uv_index: 0} valueMin={0} valueMax={11} />\n        </Stack>\n    </div>\n)\n}\nexport default CurrentUV"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACnB,IAAI,CAACC,MAAM,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC3CC,SAAS,CAAC,MAAI;IACNC,KAAK,CAACO,GAAG,CAAC,sIAAsI,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACrKH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAAC;MAC3BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC1B,CACJ,CAAC;EACL,CAAC,EAAC,EAAE,CAAC;EACT,oBACIR,OAAA;IAAAW,QAAA,eACIX,OAAA,CAACN,KAAK;MAACkB,SAAS,EAAE;QAAEC,EAAE,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAM,CAAE;MAACC,OAAO,EAAE;QAAEF,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,eACrEX,OAAA,CAACL,KAAK;QAACqB,KAAK,EAAE,GAAI;QAACC,MAAM,EAAE,GAAI;QAACC,KAAK,EAAEf,MAAM,GAAEA,MAAM,CAACgB,MAAM,CAACC,QAAQ,GAAE,CAAE;QAACC,QAAQ,EAAE,CAAE;QAACC,QAAQ,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAAxB,EAAA,CAhBKD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAiBf,eAAeA,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}